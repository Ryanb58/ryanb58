<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Taylor Brazelton</title>
    <link>https://taylorbrazelton.com/</link>
    <description>Recent content on Taylor Brazelton</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Mon, 28 Jan 2019 15:51:58 -0500</lastBuildDate>
    
	<atom:link href="https://taylorbrazelton.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Invalidate AWS CloudFront Cache</title>
      <link>https://taylorbrazelton.com/posts/2019/01/invalidate-aws-cloudfront-cache/</link>
      <pubDate>Mon, 28 Jan 2019 15:51:58 -0500</pubDate>
      
      <guid>https://taylorbrazelton.com/posts/2019/01/invalidate-aws-cloudfront-cache/</guid>
      <description>Today, I needed to invalidate a specific Distribution&amp;rsquo;s cache on AWS Cloudfront. This resulted in me searching through the AWS cli tool&amp;rsquo;s docs. Luckily I was able to uncover a command to accomplish such a task.
aws cloudfront create-invalidation --distribution-id DISTRIBUTION_ID --paths /\*  Simply replace DISTRIBUTION_ID with the proper ID and you will be good to go.</description>
    </item>
    
    <item>
      <title>Unlimited Private Repos on Github</title>
      <link>https://taylorbrazelton.com/posts/2019/01/unlimited-private-repos-on-github/</link>
      <pubDate>Tue, 08 Jan 2019 16:52:04 -0500</pubDate>
      
      <guid>https://taylorbrazelton.com/posts/2019/01/unlimited-private-repos-on-github/</guid>
      <description>Github just upgraded their free plan to include unlimited private repos!
Check it out here!
Downgrade your account from Git Pro on the billing page.</description>
    </item>
    
    <item>
      <title>Replace a Table With View</title>
      <link>https://taylorbrazelton.com/posts/2019/01/replace-table-with-view/</link>
      <pubDate>Mon, 07 Jan 2019 10:51:38 -0500</pubDate>
      
      <guid>https://taylorbrazelton.com/posts/2019/01/replace-table-with-view/</guid>
      <description>This weekend while on dev support, an issue came to our attention that customers were still able to see soft deleted data in some parts of the app. Instead of going through all the code and updating each query to return only existing data though, I went directly to the source and replaced the table with a view.
Pros/Cons: Pros: - Easily revertible change. - Apply once, fixes all current queries.</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://taylorbrazelton.com/posts/2019/01/hello-world/</link>
      <pubDate>Sun, 06 Jan 2019 23:49:57 -0500</pubDate>
      
      <guid>https://taylorbrazelton.com/posts/2019/01/hello-world/</guid>
      <description>Hello World.
This year I am moving my blog from Pelican to Hugo.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://taylorbrazelton.com/about/</link>
      <pubDate>Sun, 06 Jan 2019 23:49:50 -0500</pubDate>
      
      <guid>https://taylorbrazelton.com/about/</guid>
      <description>Who Am I? I&amp;rsquo;m a guy with passion for entrepreneurship and technology!
Interesting Fact: I like to juggle.
Education: B.S. in Computer Science from Purdue</description>
    </item>
    
    <item>
      <title>Django Migrations Downgrade in Docker Swarm</title>
      <link>https://taylorbrazelton.com/posts/2018/docker-django-migration-downgrade/</link>
      <pubDate>Fri, 02 Mar 2018 23:49:57 -0500</pubDate>
      
      <guid>https://taylorbrazelton.com/posts/2018/docker-django-migration-downgrade/</guid>
      <description>Edge cases are a big problem in software engineering, one that I recently ran into while on a beta box was errors being thrown after a downgrade.
First a little background on the application. It is a django application running in a docker container via docker-swarm. Our application upgrade/downgrade process is to reduce the amount of containers running down to 0. Change the tag numbers in our .yml file and then scale them back up.</description>
    </item>
    
    <item>
      <title>Strategy for Moving Away From Legacy Code</title>
      <link>https://taylorbrazelton.com/posts/2018/moving-away-from-legacy/</link>
      <pubDate>Thu, 15 Feb 2018 23:49:57 -0500</pubDate>
      
      <guid>https://taylorbrazelton.com/posts/2018/moving-away-from-legacy/</guid>
      <description>1) Chunk Your App Into Pieces  Turn everything into a MICROservice.  2) Modernize Access To Data  Implement Data Access via API&amp;rsquo;s or using a similar data store.
 Developers should not care what it looks like on the backend. They should be able to easly access and manipulate the data in a secure way using their favorite languages.
  3) Replace Decaying Code  Slowly replace chunks of your application one piece at a time.</description>
    </item>
    
  </channel>
</rss>